package com.spark.service;

import java.util.HashMap;
import java.util.Map;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.spark.Entity.UserEntity;
import com.spark.dto.UserDTO;
import com.spark.repository.AuthRepository;

@Service
public class AuthService {

	@Autowired
	private AuthRepository AuthRepo;
	
	@Autowired
	private PasswordEncoder pwEncoder;
	public ResponseEntity<?> authenticateUser(UserDTO login) {
		try {
			//아이디 검증
			if(login.getUser_id() == null || login.getUser_id().trim().isEmpty()) {
				Map<String, Object> response = new HashMap<>();
				response.put("success", false);
				response.put("message", "아이디를 입력하세요");
				return ResponseEntity.badRequest().body(response);
			}
			//비밀번호 검증
			if(login.getPw() == null || login.getPw().trim().isEmpty()) {
				Map<String, Object> response = new HashMap<>();
				response.put("success", false);
				response.put("message", "비밀번호를 입력하세요");
				return ResponseEntity.badRequest().body(response);
			}
			//db에 있는 id와 login의 id를 비교
			Optional<UserEntity> userOptional = AuthRepo.findByUserId(login.getUser_id());
			
			//아이디 없음
			if(userOptional.isPresent()) {
				Map<String, Object> response = new HashMap<>();
				response.put("success", false);
				response.put("message", "존재하지 않은 아이디입니다.");
				return ResponseEntity.badRequest().body(response);
			}
			
			UserEntity user = userOptional.get();
			
			
		}catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

}
